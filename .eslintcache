[{"/Users/ilyasreyhanoglu/Code/stillo/src/index.js":"1","/Users/ilyasreyhanoglu/Code/stillo/src/reportWebVitals.js":"2","/Users/ilyasreyhanoglu/Code/stillo/src/App.js":"3","/Users/ilyasreyhanoglu/Code/stillo/src/graphql/queries.js":"4","/Users/ilyasreyhanoglu/Code/stillo/src/graphql/mutations.js":"5","/Users/ilyasreyhanoglu/Code/stillo/src/models/index.js":"6","/Users/ilyasreyhanoglu/Code/stillo/src/models/schema.js":"7","/Users/ilyasreyhanoglu/Code/stillo/src/aws-exports.js":"8","/Users/ilyasreyhanoglu/Code/stillo/src/components/Appointment/Appointment.js":"9"},{"size":607,"mtime":1613023535079,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1613023535080,"results":"12","hashOfConfig":"11"},{"size":4822,"mtime":1613025230401,"results":"13","hashOfConfig":"11"},{"size":3272,"mtime":1613025914090,"results":"14","hashOfConfig":"11"},{"size":2962,"mtime":1613025914136,"results":"15","hashOfConfig":"11"},{"size":166,"mtime":1612414772318,"results":"16","hashOfConfig":"17"},{"size":2131,"mtime":1612414772318,"results":"18","hashOfConfig":"17"},{"size":692,"mtime":1613023811504,"results":"19","hashOfConfig":"11"},{"size":3816,"mtime":1613026077398,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1cqx248",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w8xsfc",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ilyasreyhanoglu/Code/stillo/src/index.js",[],["41","42"],"/Users/ilyasreyhanoglu/Code/stillo/src/reportWebVitals.js",[],"/Users/ilyasreyhanoglu/Code/stillo/src/App.js",["43","44"],"import React, { useEffect, useState } from \"react\";\nimport Amplify, { API, graphqlOperation } from \"aws-amplify\";\nimport { createService } from \"./graphql/mutations\";\nimport { listServices } from \"./graphql/queries\";\nimport { withAuthenticator } from \"@aws-amplify/ui-react\";\nimport { Auth, DataStore } from \"aws-amplify\";\nimport { Service } from \"./models\";\nimport Appointment from \"./components/Appointment/Appointment\";\n\nimport awsExports from \"./aws-exports\";\nAmplify.configure(awsExports);\n\nconst initialState = { serviceName: \"\", serviceDuration: \"\", servicePrice: \"\" };\n\nconst App = () => {\n  const [formState, setFormState] = useState(initialState);\n  const [services, setServices] = useState([]);\n\n  useEffect(() => {\n    fetchServices();\n    getUser();\n  }, []);\n\n  function setInput(key, value) {\n    setFormState({ ...formState, [key]: value });\n  }\n\n  async function fetchServices() {\n    try {\n      const serviceData = await API.graphql(graphqlOperation(listServices));\n      const services = serviceData.data.listServices.items;\n      setServices(services);\n    } catch (err) {\n      console.log(\"error fetching services with API: \", err);\n    }\n  }\n\n  async function addServiceDataStore() {\n    try {\n      const service = {\n        name: formState.serviceName,\n        duration: formState.serviceDuration,\n        price: formState.servicePrice,\n      };\n      setServices([...services, service]);\n      setFormState(initialState);\n      await DataStore.save(new Service(service));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async function addServiceAPI() {\n    try {\n      const service = {\n        name: formState.serviceName,\n        duration: formState.serviceDuration,\n        price: formState.servicePrice,\n      };\n      setServices([...services, service]);\n      setFormState(initialState);\n      await API.graphql(graphqlOperation(createService, { input: service }));\n    } catch (err) {\n      console.log(\"error creating services with API:\", err);\n    }\n  }\n\n  async function signOut() {\n    try {\n      await Auth.signOut();\n    } catch (error) {\n      console.log(\"error signing out: \", error);\n    }\n  }\n\n  async function getUser() {\n    let user = await Auth.currentAuthenticatedUser();\n    // console.log(\"user: \", user);\n    // const service = await DataStore.query(\n    //   Service,\n    //   \"89ff4f71-aa6a-4160-a69e-32a51326d4d0\"\n    // );\n    // console.log(service);\n    // await DataStore.save(\n    //   Service.copyOf(service, (updated) => {\n    //     updated.name = `The Best Service Ever`;\n    //   })\n    // );\n  }\n\n  const showServicesMenu = () => {\n    return (\n      <div style={styles.container}>\n        <br />\n        <h2>Services</h2>\n        <input\n          onChange={(event) => setInput(\"serviceName\", event.target.value)}\n          style={styles.input}\n          value={formState.serviceName}\n          placeholder=\"Name\"\n        />\n        <input\n          onChange={(event) => setInput(\"serviceDuration\", event.target.value)}\n          style={styles.input}\n          value={formState.serviceDuration}\n          placeholder=\"Duration\"\n        />\n        <input\n          onChange={(event) => setInput(\"servicePrice\", event.target.value)}\n          style={styles.input}\n          value={formState.servicePrice}\n          placeholder=\"Price\"\n        />\n        <br />\n        <button style={styles.button} onClick={addServiceDataStore}>\n          Create Service (DataStore)\n        </button>\n        <br />\n        <button style={styles.button} onClick={addServiceAPI}>\n          Create Service (API)\n        </button>\n        <br />\n        <br />\n        <br />\n        {services.map((service, index) => (\n          <div key={service.id ? service.id : index} style={styles.todo}>\n            <p style={styles.todoName}>{service.name}</p>\n            <p style={styles.todoDescription}>{service.duration}</p>\n            <p style={styles.todoDescription}>{service.price}</p>\n          </div>\n        ))}\n        <br />\n        <br />\n      </div>\n    );\n  };\n\n  return (\n    <div style={styles.container}>\n      {/* {showServicesMenu()} */}\n      <Appointment />\n      <button style={styles.button} onClick={signOut}>\n        Sign Out\n      </button>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    width: 400,\n    margin: \"0 auto\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    padding: 20,\n  },\n  todo: { marginBottom: 15 },\n  input: {\n    border: \"none\",\n    backgroundColor: \"#ddd\",\n    marginBottom: 10,\n    padding: 8,\n    fontSize: 18,\n  },\n  todoName: { fontSize: 20, fontWeight: \"bold\" },\n  todoDescription: { marginBottom: 0 },\n  button: {\n    backgroundColor: \"black\",\n    color: \"white\",\n    outline: \"none\",\n    fontSize: 18,\n    padding: \"12px 0px\",\n  },\n};\n\nexport default withAuthenticator(App);\n","/Users/ilyasreyhanoglu/Code/stillo/src/graphql/queries.js",[],"/Users/ilyasreyhanoglu/Code/stillo/src/graphql/mutations.js",[],"/Users/ilyasreyhanoglu/Code/stillo/src/models/index.js",[],"/Users/ilyasreyhanoglu/Code/stillo/src/models/schema.js",[],"/Users/ilyasreyhanoglu/Code/stillo/src/aws-exports.js",[],"/Users/ilyasreyhanoglu/Code/stillo/src/components/Appointment/Appointment.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":77,"column":9,"nodeType":"51","messageId":"52","endLine":77,"endColumn":13},{"ruleId":"49","severity":1,"message":"53","line":91,"column":9,"nodeType":"51","messageId":"52","endLine":91,"endColumn":25},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'showServicesMenu' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]